wxGlade TODO list
=================

Last update 2012-12-26

The list is more or less sorted by priority


Next release:
-------------

- Simplify Path handling probably split of in user path and system path
  e.g. for templates

- Update translation

- ...


Real TODO (# = Partially done):
-------------------------------

- Undo/Redo

- Better XRC support (custom classes, separate files, ...) (#: custom
  classes - see the tutorial)

- Event handlers support

- ListCtrl and TreeCtrl (#: need to add more properties)

- ToolBar for frames (#: no controls yet)

- complete MenuBar with icons and StatusBar messages support (#)

- Less frequently used controls

- on-line help (with wxHtmlHelpController)

- test of the various modules with unittest (this might come earlier...)

- gettext support (#: done for code generation, todo for wxGlade itself)

- ``Templates'' for particular windows (for example, something as a dialog
  with an image, a centered label and a couple of buttons)

- TabOrder property (this may be hard though)

- (Maybe) Java code generator

- ...


Things Done:
------------

- Code generation on separate files

- "tags" on the generated code, to detect the portions of code to replace and
  those to keep as is, when updating an existing file

- Investigation of the many memory leaks

- speedup of the xml loading

- separation between window objects and sizer ones in the generated code

- Code generation from the command line, witout starting the GUI

- support wxWindows xml resources (XRC) through a code generator

- support for C++ code generation

- Possibility to change the type of a sizer after its creation

- Possibility to change the position of a widget inside its sizer

- Edit -> Preferences... to customize some aspects of wxGlade

- International characters support

- Grid

- Auto saving/backup of wxg files (and possibly also of generated
  sources)

- Import of "wxGlade-friendly" XRC files

- Preview of toplevel widgets

- Checks on the values of some properties (name, class,...)

- More basic properties for widgets (enabled for example)

- ScrolledWindow (as a `scrollable' property for panels)

- widgets path, to let the user add new widget modules

- support for Perl code generation
